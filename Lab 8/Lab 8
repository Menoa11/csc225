public class Heapsort {
    
    public static void heapsort(int[] A) {
        int n = A.length;
        
        for (int i = n - 1; i > 0; i--) {
            swap(A, 0, i);
            
            maxHeapify(A, 0, i);
        }
    }
    
    private static void maxHeapify(int[] A, int i, int heapSize) {
        int largest = i;
        int left = 2 * i + 1;  
        int right = 2 * i + 2; 

        if (left < heapSize && A[left] > A[largest]) {
            largest = left;
        }
        if (right < heapSize && A[right] > A[largest]) {
            largest = right;
        }
        if (largest != i) {
            swap(A, i, largest);
            maxHeapify(A, largest, heapSize);
        }
    }
    private static void swap(int[] A, int i, int j) {
        int temp = A[i];
        A[i] = A[j];
        A[j] = temp;
    }
}    
